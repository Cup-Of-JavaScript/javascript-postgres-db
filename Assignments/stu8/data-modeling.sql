/**
 * Ex. 11
 */
-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.lemonade_stand
(
    lemonade_id serial NOT NULL,
    size_id smallint,
    flavor_id smallint,
    date date,
    PRIMARY KEY (lemonade_id)
);

CREATE TABLE IF NOT EXISTS public.lemonade_size
(
    size_id serial NOT NULL,
    size text,
    price money,
    PRIMARY KEY (size_id)
);

CREATE TABLE IF NOT EXISTS public.lemonade_flavor
(
    flavor_id serial NOT NULL,
    flavor text,
    PRIMARY KEY (flavor_id)
);

ALTER TABLE IF EXISTS public.lemonade_stand
    ADD FOREIGN KEY (size_id)
    REFERENCES public.lemonade_size (size_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.lemonade_stand
    ADD FOREIGN KEY (flavor_id)
    REFERENCES public.lemonade_flavor (flavor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
/**
 * Ex. 12
 */

 BEGIN;


CREATE TABLE IF NOT EXISTS public.banking
(
    banking_id serial NOT NULL,
    username text,
    first_name text,
    last_name text,
    checking_id smallint,
    saving_id smallint,
    retirement_id smallint,
    PRIMARY KEY (banking_id)
);

CREATE TABLE IF NOT EXISTS public.checking
(
    checking_id serial NOT NULL,
    balance numeric,
    date_open date,
    date_close date,
    PRIMARY KEY (checking_id)
);

CREATE TABLE IF NOT EXISTS public.saving
(
    saving_id serial NOT NULL,
    balance numeric,
    date_open date,
    date_close date,
    PRIMARY KEY (saving_id)
);

CREATE TABLE IF NOT EXISTS public.retirement
(
    retirement_id serial NOT NULL,
    balance numeric,
    date_open date,
    date_close date,
    PRIMARY KEY (retirement_id)
);

ALTER TABLE IF EXISTS public.banking
    ADD FOREIGN KEY (checking_id)
    REFERENCES public.checking (checking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.banking
    ADD FOREIGN KEY (saving_id)
    REFERENCES public.saving (saving_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.banking
    ADD FOREIGN KEY (retirement_id)
    REFERENCES public.retirement (retirement_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
