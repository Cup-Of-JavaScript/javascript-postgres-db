/**
 * Ex. 11
 */
-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.lemonade
(
    lemonade_id serial NOT NULL,
    lemonade_size smallint,
    flavor_id smallint,
    lemonade_days date,
    PRIMARY KEY (lemonade_id)
);

CREATE TABLE IF NOT EXISTS public.lemonade_size
(
    lemonade_size_id serial NOT NULL,
    size text,
    sales money,
    PRIMARY KEY (lemonade_size_id)
);

CREATE TABLE IF NOT EXISTS public.flavor
(
    flavor_id serial NOT NULL,
    flavor text,
    lemonade_size_id integer,
    PRIMARY KEY (flavor_id)
);

ALTER TABLE IF EXISTS public.lemonade
    ADD FOREIGN KEY (lemonade_size)
    REFERENCES public.lemonade_size (lemonade_size_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.lemonade
    ADD FOREIGN KEY (flavor_id)
    REFERENCES public.flavor (flavor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
/**
 * Ex. 12
 */
-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.bank
(
    bank_id serial NOT NULL,
    checking_id integer,
    savings_id integer,
    retirement_id integer,
    username text,
    PRIMARY KEY (bank_id)
);

CREATE TABLE IF NOT EXISTS public."checking "
(
    checking_id serial NOT NULL,
    account_balance money,
    account_open date,
    "account _closed" date,
    PRIMARY KEY (checking_id)
);

CREATE TABLE IF NOT EXISTS public.savings
(
    savings_id serial NOT NULL,
    account_balance money,
    account_open date,
    account_closed date,
    PRIMARY KEY (savings_id)
);

CREATE TABLE IF NOT EXISTS public.retirement
(
    retirement_id serial NOT NULL,
    account_balance money,
    account_open date,
    account_closed date,
    PRIMARY KEY (retirement_id)
);

ALTER TABLE IF EXISTS public.bank
    ADD FOREIGN KEY (checking_id)
    REFERENCES public."checking " (checking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.bank
    ADD FOREIGN KEY (savings_id)
    REFERENCES public.savings (savings_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.bank
    ADD FOREIGN KEY (retirement_id)
    REFERENCES public.retirement (retirement_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;